@require: vdecoset


module Quotation : sig

  val quotation-scheme : context -> inline-text option -> (context -> ((length*length*length*length)*deco-set)) option -> (context -> inline-text -> block-boxes -> block-boxes) option -> block-text -> block-boxes
  direct +quotation : [inline-text?; (context -> ((length*length*length*length)*deco-set))?; (context -> inline-text -> block-boxes -> block-boxes)?; block-text] block-cmd

end = struct


  let quotation-scheme ctx title-opt body-deco-fun-opt title-deco-fun-opt bt =
    let (pads, deco) =
      match body-deco-fun-opt with
      | None -> ((20pt, 0pt, 0pt, 0pt), VDecoSet.empty)
      | Some(f) -> f ctx
    in
    block-frame-breakable ctx pads deco (fun ctx -> (
      let body = read-block ctx bt in
      match title-opt with
      | None -> body
      | Some(title) -> (
        match title-deco-fun-opt with
        | Some(f) -> f ctx title body
        | None -> (
          let title-ib = read-inline ctx title in
          let title-bb = line-break false true ctx (inline-fil ++ title-ib) in
          body +++ title-bb
        )
      )
    ))

  let-block ctx +quotation ?:title-opt ?:body-deco-fun-opt ?:title-deco-fun-opt bt =
      quotation-scheme ctx title-opt body-deco-fun-opt title-deco-fun-opt bt

end
